이상현상의 종류
	- 삽입 이상
		새 데이터를 삽입하기 위해 불필요한 데이터도 삽입해야 하는 문제
		담당 프로젝트가 정해지지 않은 사원이 있다면,
		프로젝트 코드에 NULL을 작성할 수 없으므로 이 사원은 테이블에 추가될 수
		없다. 따라서 '미정'이라는 프로젝트 코드를 따로 만들어서 삽입해야 한다.

	- 갱신이상
		중복 행 중 일부만 변경하여 데이터가 불일치하게 되므로 모순의 문제
		한 명의 사원은 반드시 하나의 부서에만 속할 수 있다.
		만약 "김헌찬이" 보안팀으로 부서를 옮길 시 3개 모두 갱신해주지 않는다면
		개발팀인지 보안팀인지 알 수 없다.
		이러한 현상을 갱신 이상이라고 한다.
	
	- 삭제이상
		행을 삭제하면 꼭 필요한 데이터까지 함께 삭제되는 문제
		이순신이 담당한 프로젝트를 박살내서 드랍된다면 이순신행을 모두 삭제하게 된다.
		따라서 프로젝트에서 드랍되면 정보를 모두 드랍하게 된다.
		이러한 현상을 삭제 이상이라고 한다.

	이러한 이상 현상이 발생하는 이유는 테이블이 정규화가 되어 있지 않기 때문이다.
	정규화를 진행하기 위해서는 각 컬럼간의 관련성을 파악해야 하고, 이 관련성을
	"함수적 종속성"(Functional Dependecy)이라고 한다.	
	따라서 하나의 테이블에서는 하나의 함수적 종속성만 존재하도록 정규화를 한다.
	
	함수
	X -> Y

	X : 결정자 -> X가 Y를 결정
	Y : 종속자 -> Y가 X에 종속
----------------------------------------------------------------------------------------------------------
NULL
	정의되지 않은 값
	빈 값 대신 미정값을 부여할 때 사용(PK는 불가능, FK는 가능)
	
NOT NULL 제약조건
	ALTER TABLE 테이블명 MODIFY 컬러명 NOT NULL;

제약 조건 삭제
	ALTER TABLE 테이블명 DROP CONSTRAINT 제약조건 이름;

조건식
	컬럼명 IS NULL : 컬럼 값이 NULL이면 참
	컬럼명 IS NOT NULL : 컬럼 값이 NULL이 아니면 참

NULL 값을 다른 값으로 변경
	NVL()	: NULL값 대신 다른 값으로 변경 후 검색
	NVL2() 	: NULL일 때의 값, NULL이 아닐 때의 값을 각각 설정
